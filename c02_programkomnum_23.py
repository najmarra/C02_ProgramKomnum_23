# -*- coding: utf-8 -*-
"""C02_ProgramKomnum_23.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bCoRE8GhLudWuRbtAcf2amr0jLns-vpD
"""

from sympy import symbols, sympify, Poly
import numpy as np

def persamaan(equation_str):
    x = symbols('x')
    expr = sympify(equation_str)
    poly = Poly(expr, x)
    coeffs = poly.all_coeffs()
    return coeffs

def faktorisasi(A2, A1, A0):
    results = []

    # Iterasi 1
    b0 = 0
    a1 = round(A2 - b0, 2)
    a0 = round(A1 - a1 * b0, 2)
    results.append((b0, a1, a0))

    # Iterasi 2
    b0 = round(A0 / a0, 2)
    a1 = round(A2 - b0, 2)
    a0 = round(A1 - a1 * b0, 2)
    results.append((b0, a1, a0))

    # Iterasi 3
    b0 = round(A0 / a0, 2)
    a1 = round(A2 - b0, 2)
    a0 = round(A1 - a1 * b0, 2)
    results.append((b0, a1, a0))

    return results

def akar(b0, a1, a0):
    root1 = int(round(-b0))
    coeffs = [1, a1, a0]
    quad_roots = np.roots(coeffs)

    hasil_akar = []
    for r in quad_roots:
        if r.imag == 0:
            hasil_akar.append(int(round(r.real)))
        else:
            real_part = int(round(r.real))
            imag_part = int(round(r.imag))
            hasil_akar.append(complex(real_part, imag_part))

    return [root1] + hasil_akar


# Input
input_user = input("Masukkan persamaan (misal: f(x) = x**3 + 2*x**2 + 3*x + 4): ")
a3, A2, A1, A0 =persamaan(input_user)

iterasi = faktorisasi(A2, A1, A0)

# Output
for i, (b0, a1, a0) in enumerate(iterasi, 1):
    print(f"Hasil Iterasi {i}: b0 = {b0}, a1 = {a1}, a0 = {a0}")

final_b0, final_a1, final_a0 = iterasi[-1]
roots = akar(final_b0, final_a1, final_a0)

print("\nAkar-akar persamaan dari faktorisasi:")
for i, r in enumerate(roots, 1):
    print(f"Akar {i}: {r}")